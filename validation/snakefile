from pathlib import Path


lexicoder_path = Path("lexicoder_dict", "lexicoder_dict_en.jsonl")
lexicoder_preprocessor_path = Path("lexicoder_dict", "LSDpreprocess2015.txt")
rule lsd:
    input: "data/input/{file}.csv"
    output: "data/lsd/{file}.jsonl"
    conda: "parlasent.yml"
    params:
        lexicoder = lexicoder_path,
        preprocessor=lexicoder_preprocessor_path,
    script: "scripts/lexicoder.py"
rule parlasent:
    input: "data/input/{file}.csv"
    output: "data/parlasent/{file}.jsonl"
    conda: "parlasentransformers.yml"
    script: "scripts/parlasent.py"

rule parlasent_de:
    input: "de_dict/DE_bundestag/{file}.csv"
    output: "data/parlasent/{file}.jsonl"
    conda: "parlasentransformers.yml"
    script: "scripts/parlasent.py"
rule gather_coding:
    input:
        lsd_coding = expand(rules.lsd.output[0], file=expand("1_coding_{letter}_2010", letter=["a","b","c"])),
        parlasent_coding = expand(rules.parlasent.output[0], file=expand("1_coding_{letter}_2010", letter=["a","b","c"])),
    output:
        png = "pairplot_coding.png",
        json = "1_coding_2010.json"
    conda: "parlasentransformers.yml"
    script: "scripts/analyze_coding.py"


rule gather_de:
    input:
        parlasent_de = "data/parlasent/bundestag_raw_and_counts_DE.jsonl"
    output:
        png = "pairplot_de.png",
        json = "de.json"
    conda: "parlasentransformers.yml"
    script: "scripts/analyze_de.py"



rule gather:
    default_target: True
    input: [rules.gather_coding.output.png, rules.gather_de.output.png, ]